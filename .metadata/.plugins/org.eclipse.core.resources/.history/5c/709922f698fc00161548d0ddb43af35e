angular.element(document).ready(function () {
    console.log('page loading completed');
});
var offererApp = angular.module('offererApp', []).config(['$qProvider', '$httpProvider', function ($qProvider, $httpProvider)  {
    $qProvider.errorOnUnhandledRejections(false);
    
}]).run(['$rootScope', '$http', '$window', function ($rootScope, $http, $window) {
	
	//namestiti dole u funckcijama gde treba user.email kada se ovo namesti!
	if (typeof $.cookie('user') !== 'undefined') {
		$scope.user = JSON.parse($.cookie('user'));
		
		if(user.userType == "GUEST") {
			$window.location.href = "/GuestPage/GuestPage.html";
		}
		// DALJE
	}
		 
}]);


offererApp.controller('offererControler', [ '$scope', 'tenderService', 'acceptedService', 'accountService', function($scope, tenderService, acceptedService, accountService){

	setShows = function(tendersShow, acceptedShow, accountShow, sendedShow){
		$scope.tendersShow = tendersShow;
		$scope.acceptedShow = acceptedShow;
		$scope.accountShow = accountShow;
		$scope.sendedShow = sendedShow;
	}
	setShows(false,false,false,false);
	
	// TENDER METODE
	
	$scope.newOfferings={
			description : "",
			price : 0,
			deliveryDate: ""
	}
	
	
	$scope.tender = function(){
		setShows(true,false,false,false);
		
		tenderService.getActiveTenders().then(
				function(response){
					$scope.activeTenders = response.data;
				}
		);
		
	}
	
	$scope.createNewOfferings = function(tenderID){
		if($scope.newOfferings.price < 0 || $scope.newOfferings.deliveryDate == "" || $scope.newOfferings.deliveryDate < new Date()){
			alert("Cena ne sme biti manja od nule i morate predefinisati datum dostavljanja u buducnosti")
			return;
		}
		
		tenderService.createNewOfferings($scope.newOfferings, tenderID);
		
	}
	
	//SENDED
	$scope.sended = function(){
		setShows(false,false,false,true);
		
		tenderService.getMyAllOfferings().then(
				function(response){
					$scope.myAllOfferings = response.data;
					
					angular.forEach($scope.myAllOfferings, function(value,key){
						value.deliveryDate = new Date(value.deliveryDate);
					});
					
				}
		);
		
	}
	
	
	$scope.deleteOfferings = function (offeringID){
		
		tenderService.deleteOfferings(offeringID);
		
	}
	
	
	// ACCEPTED METODE
	$scope.accepted = function(){
		setShows(false,true,false,false);
	}
	
	
	// ACCOUNT METODE
	$scope.account = function(){
		setShows(false,false,true,false);
	}
	
	
	
	
}]);



offererApp.service('tenderService',['$window', '$http', function($window, $http){
	
	this.getActiveTenders = function(){
		return $http({
			  method: 'GET',
		      url : "../offerer/getActiveTenders"
		});
	}
	
	this.getMyAllOfferings = function(){
		return $http({
			method: 'GET',
			url: "../offerer/getMyAllOfferings/2" //=============================================== nemstiti korisnikov email
		});
	}
	
	this.createNewOfferings = function(newOfferings, tenderID){
		$http({
			  method: 'POST',
			  data: newOfferings,
		      url : "../offerer/createNewOfferings/" + tenderID + "/2" // ============================= ubaciti korisnikov email
		}).then(function success(response) {
				alert(response.data);
				location.reload();
		  }, function error(response) {
			  	alert("Error!");
		  }
		);
	}
	
	
	this.deleteOfferings = function(offeringID){
		
		$http({
			method: 'DELETE',
			irl: "../offerer/deleteOffering/"+offeringID
		}).then(
			function success(response){
				location.reload();
			},
			function error(response){
				alert("Error!");
			}
		);
		
	}

}]);

offererApp.service('acceptedService',['$window', '$http', function($window, $http){

	

}]);


offererApp.service('accountService',['$window', '$http', function($window, $http){

	

}]);












