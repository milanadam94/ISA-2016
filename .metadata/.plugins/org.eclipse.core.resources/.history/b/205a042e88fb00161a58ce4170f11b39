package com.sms.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sms.beans.ActiveUser;
import com.sms.beans.Drink;
import com.sms.beans.Food;
import com.sms.beans.Menu;
import com.sms.beans.Restaurant;
import com.sms.beans.RestaurantManager;
import com.sms.beans.UserType;
import com.sms.dao.ActiveUserDao;
import com.sms.dao.DrinkDao;
import com.sms.dao.FoodDao;
import com.sms.dao.MenuDao;
import com.sms.dao.RestaurantDao;
import com.sms.dao.RestaurantManagerDao;

@Service
public class RestaurantManagerServiceImpl implements RestaurantManagerService{

	@Autowired
	private RestaurantManagerDao restaurantManagerDao;

	@Autowired
	private ActiveUserDao activeUserDao;
	
	@Autowired
	private RestaurantDao restourantDao;
	
	@Autowired
	private MenuDao menuDao;
	
	@Autowired
	private FoodDao foodDao;
	
	@Autowired
	private DrinkDao drinkDao;
	
	@Override
	public Restaurant getRestaurant(String restManagerID) {
		// TODO Auto-generated method stub
		ActiveUser activeUser = activeUserDao.findByEmail(restManagerID);
		if(activeUser == null || !activeUser.getUserType().equals(UserType.RESTAURANTMANAGER)){
			return null;
		}
				
		RestaurantManager restManager = restaurantManagerDao.findByUserId(activeUser.getUser().getId());

		if(restManager != null){
			return restManager.getRestaurant();
		}
		
		return null;
		
	}

	@Override
	public RestaurantManager getRestaurantManager(String restManagerID) {
		// TODO Auto-generated method stub
		ActiveUser activeUser = activeUserDao.findByEmail(restManagerID);
		if(activeUser == null || !activeUser.getUserType().equals(UserType.RESTAURANTMANAGER)){
			return null;
		}
				
		return restaurantManagerDao.findByUserId(activeUser.getUser().getId());
	}

	@Override
	public Menu getMenu(String restManagerID, Restaurant restourant) {
		// TODO Auto-generated method stub

		ActiveUser activeUser = activeUserDao.findByEmail(restManagerID);
		if(activeUser == null || !activeUser.getUserType().equals(UserType.RESTAURANTMANAGER)){
			return null;
		}
		
		
		RestaurantManager manager = restaurantManagerDao.findByUserId(activeUser.getUser().getId());
		if(manager == null){
			return null;
		}
		
		if(manager.getRestaurant().getId() != restourant.getId()){
			return null;
		}
		
		return menuDao.findByRestaurant(restourant);
	}

	@Override
	public void deleteFood(Integer foodID, Integer menuID) {
		// TODO Auto-generated method stub
		
		Menu menu = menuDao.findById(menuID);
		if(menu == null){
			return;
		}
		
		
		for(Food food : menu.getFoods()){
			if(food.getId().equals(foodID)){
				menu.getFoods().remove(food);
				break;
			}
		}
		
		menuDao.save(menu);
		
		Food food = new Food();
		food.setId(foodID);
		foodDao.delete(food);
		
		
	}

	@Override
	public void addFood(Integer menuID, Food newFood) {
		// TODO Auto-generated method stub
		
		Menu menu = menuDao.findById(menuID);
		if(menu == null){
			return;
		}
		
		if(newFood.getName().equals("") || newFood.getPrice() < 0){
			return;
		}
		
		foodDao.save(newFood);
		
		menu.getFoods().add(newFood);		
		menuDao.save(menu);
	}

	@Override
	public void addDrink(Integer menuID, Drink newDrink) {
		// TODO Auto-generated method stub

		Menu menu = menuDao.findById(menuID);
		if(menu == null){
			return;
		}
		
		if(newDrink.getName().equals("") || newDrink.getPrice() < 0){
			return;
		}
		
		drinkDao.save(newDrink);
		
		menu.getDrinks().add(newDrink);		
		menuDao.save(menu);
	}

	@Override
	public void deleteDrink(Integer drinkID, Integer menuID) {
		// TODO Auto-generated method stub
		Menu menu = menuDao.findById(menuID);
		
		if(menu == null){
			return;
		}
		
		for(Drink drink : menu.getDrinks()){
			if(drink.getId().equals(drinkID)){
				menu.getDrinks().remove(drink);
				break;
			}
		}
		
		menuDao.save(menu);
		
		Drink drink = new Drink();
		drink.setId(drinkID);
		drinkDao.delete(drink);
	}

	@Override
	public void changeFoods(Menu newMenu) {
		// TODO Auto-generated method stub
		
		Menu menu = menuDao.findById(newMenu.getId());
		
		
		
	}

	
	
}
