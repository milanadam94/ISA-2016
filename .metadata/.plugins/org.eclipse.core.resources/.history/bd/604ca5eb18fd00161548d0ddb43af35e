angular.element(document).ready(function () {
    console.log('page loading completed');
});
var restManager = angular.module('restManager', []).config(['$qProvider', '$httpProvider', function ($qProvider, $httpProvider)  {
    $qProvider.errorOnUnhandledRejections(false);
    
}]).run(['$rootScope', '$http', '$window', function ($rootScope, $http, $window) {
	
	//namestiti dole u funckcijama gde treba user.email kada se ovo namesti!
	if (typeof $.cookie('user') !== 'undefined') {
		$scope.user = JSON.parse($.cookie('user'));
		
		if(user.userType == "GUEST") {
			$window.location.href = "/GuestPage/GuestPage.html";
		}
		// DALJE
	}
		 
	
	
}]);



restManager.controller('restManagerController', [ '$scope', 'konfService', 'drinkService', 'restaurantInfoService', 'foodService', function($scope, konfService, drinkService, restaurantInfoService, foodService ){

	$scope.newFood = {
			name: "",
			description: "",
			price: 0
	}
	
	$scope.newDrink = {
			name: "",
			description: "",
			price: 0
	}
	
	
	setShows = function(profilShow, picaShow, jelovnikShow, konfiguracijaShow){
		$scope.profilShow = profilShow;
		$scope.picaShow = picaShow;
		$scope.jelovnikShow = jelovnikShow;
		$scope.konfiguracijaShow = konfiguracijaShow;
	}
	setShows(false,false,false,false);
	
	$scope.error = false;
	$scope.errorMessage = "";
	
	restaurantInfoService.getRestaurant($scope.user).then(
			function(response){
				$scope.restaurant = response.data;
				
				if(response.data.name == null){
					alert("Restoran nije pronadjen!");
				}
			}
	);
	
	
	$scope.getRestaurant = function() {		
			if($scope.restaurant.name != null){
				setShows(true, false, false, false);
			}else{
				alert("Restoran nije pronadjen!");
			}
			
	}
	

	$scope.getFoods = function(){
		restaurantInfoService.getMenu($scope.user, $scope.restaurant).then(
				function(response){

					if(response.data != null){
						setShows(false, false, true, false);
						$scope.menu = response.data;
					}else{
						alert("Meni nije pronadjen!");
					}	
					
				}
		);	
		
	}
	
	$scope.changeFood = function(foodID){
		selectedFood = "";
		
		angular.forEach($scope.menu.foods, function(value){
			if(value.id == foodID){
				selectedFood = value;
			}
			
		})
		
		if(selectedFood.name == "" || selectedFood.price < 0 || $scope.restaurant == null){
			alert("Ime ne sme biti prazno. Cena ne sme biti manja od 0");
			return;
		}
		
		foodService.saveChanges(selectedFood, $scope.menu);
		
	}
	
	
	$scope.addFood = function(){
		
		if($scope.newFood.name == "" || $scope.newFood.price < 0 || $scope.restaurant == null){
			alert("Ime ne sme biti prazno i cena ne sme biti manja od 0!");
			return;
		}
		
		foodService.addFood($scope.newFood, $scope.menu);
		restaurantInfoService.getMenu($scope.user, $scope.restaurant).then(
				function(response){
								
					if(response.data != null){
						$scope.menu = response.data;
						location.reload();
					}else{
						alert("Meni nije pronadjen!");
					}	
								
				}
			);	
		
		
	}
	
	
	$scope.deleteFood = function(foodID){
		
		foodService.deleteFood(foodID, $scope.menu);
		restaurantInfoService.getMenu($scope.user, $scope.restaurant).then(
			function(response){
							
				if(response.data != null){
					$scope.menu = response.data;
					location.reload();
				}else{
					alert("Meni nije pronadjen!");
				}	
							
			}
		);	
			
	
	}
	
	
	
	$scope.getDrinks = function(){
		restaurantInfoService.getMenu($scope.user, $scope.restaurant).then(
				function(response){
					
					if(response.data != null){
						setShows(false, true, false, false);
						$scope.menu = response.data;
					}else{
						alert("Meni nije pronadjen!");
					}	
					
				}
		);	
		
	}
	
	
	$scope.addDrink = function(){
		
		if($scope.newDrink.name == "" || $scope.newDrink.price < 0 || $scope.restaurant == null){
			alert("Ime ne sme biti prazno i cena ne sme biti manja od 0!");
			return;
		}
		
		drinkService.addDrink($scope.newDrink, $scope.menu);
		restaurantInfoService.getMenu($scope.user, $scope.restaurant).then(
				function(response){
								
					if(response.data != null){
						$scope.menu = response.data;
						location.reload();
					}else{
						alert("Meni nije pronadjen!");
					}	
								
				}
			);	
	}
	
	$scope.changeDrink = function(drinkID){
		selectedDrink = "";
		
		angular.forEach($scope.menu.drinks, function(value){
			if(value.id == drinkID){
				selectedDrink = value;
			}
			
		})
		
		if(selectedDrink.name == "" || selectedDrink.price < 0 || $scope.restaurant == null){
			alert("Ime ne sme biti prazno. Cena ne sme biti manja od 0");
			return;
		}
		
		drinkService.saveChanges(selectedDrink, $scope.menu);
		
	}
	
	$scope.deleteDrink = function(drinkID){
		drinkService.deleteDrink(drinkID, $scope.menu);
		restaurantInfoService.getMenu($scope.user, $scope.restaurant).then(
			function(response){
							
				if(response.data != null){
					$scope.menu = response.data;
					location.reload();
				}else{
					alert("Meni nije pronadjen!");
				}	
							
			}
		);		
	}
	
	
	// ===============================================================
	
	$scope.newSegment = {
			name: "",
			smoking: false,			
	}
	
	$scope.getKonf = function(){
		
		
	}
	
	
	$scope.addKonfig = function(){
		
		if($scope.newSegment.name == "" || $scope.restaurant == null){
			alert("Neispravan unos ili restoran nije pronadjen")
			return;
		}
		
		alert($scope.newSegment.name);
		
		konfService.addSegment($scope.newSegment, $scope.restaurant.id).then(
				function(response){
					alert(response.data);
				}
		);
		
		
	}
	
	
	
	
	$scope.konfig = function(){
		setShows(false,false,false,true);
		
		
		
	}
	

	$scope.saveRestaurantInfo = function() {
		
		if($scope.profilShow){
			if($scope.restaurant.name == "" || $scope.restaurant.description == ""){
				$scope.error = true;
				$scope.errorMessage = "Ne moze biti prazno!";
				return;
			}else{
				$scope.error = false;
				$scope.errorMessage = "";
			}			
			restaurantInfoService.saveChanges($scope.restaurant, $scope.user);
			
			
		}else if ($scope.jelovnikShow) {
			
			
		}else if ($scope.piceShow){
			
		}else if ($scope.konfiguracijaShow){
			
		}else {
			alert("Error! Nothing selected.");
		}
		
	}
	
}]);








restManager.service('restaurantInfoService',['$window', '$http', function($window, $http){
	this.getRestaurant = function(user){
		return $http.get("../restManager/myRestaurant/1"); // ================================= OVDE NAMESTITI EMAIL USERA
	}
	
	this.saveChanges = function(restaurant, user){
		
		$http({
			  method: 'POST',
			  data : $.param(restaurant),
		      url : "../restManager/saveRestaurantInfo/1" // =================================== OVDE NAMESTITI EMAIL USERA
		}).then(function success(response) {
					alert("Success!");
			  }, function error(response) {
				  	alert("Error!");
			  }
			);
	};
	
	this.getMenu = function (user, restaurant){
		return $http({
			method: 'POST',
			data : $.param(restaurant),
			url: "../restManager/getMenu/1"  // ==================== user.mail
		});
	}
	
	
}]);

restManager.service('foodService',['$window', '$http', function($window, $http){
	
	this.saveChanges = function (food, menu){
		$http({
			method: 'POST',
			data: $.param(food),
			url: "../restManager/changeFood/" + menu.id
		}).then(function success() {
			alert("Uspesno promenjeno!");
		  }, function error() {
			  	alert("Error!");
		  }
		  
		);	
	}
	
	this.addFood = function (newFood, menu){
		$http({
			method: 'POST',
			data: $.param(newFood),
			url: "../restManager/addFood/"+menu.id
		});
		
	}
	
	this.deleteFood = function (foodID, menu){
		$http({
			method: 'DELETE',
			url: "../restManager/deleteFood/"+foodID+"/"+menu.id
		});
	}
	
}]);

restManager.service('drinkService', ['$window', '$http', function($window, $http){

	this.saveChanges = function (drink, menu){
		$http({
			method: 'POST',
			data: $.param(drink),
			url: "../restManager/changeDrink/" + menu.id
		}).then(function success() {
			alert("Uspesno promenjeno!");
		  }, function error() {
			  	alert("Error!");
		  }
		  
		);		
	}
	
	this.deleteDrink = function(drinkID, menu){
		$http({
			method: 'DELETE',
			url: "../restManager/deleteDrink/"+drinkID+"/"+menu.id
		}); 
	}
	
	this.addDrink = function (newDrink, menu){
		$http({
			method: 'POST',
			data: $.param(newDrink),
			url: "../restManager/addDrink/"+menu.id
		});
	}
	
}]);

restManager.service('konfService', ['$window', '$http', function($window, $http){
	
	this.addSegment = function(newSegment, restoranID){
		return $http({
			method: 'POST',
			data: newSegment,
			url: "../restManager/addSegment/"+restoranID
		});
		
	}
	
	this.getKonf;
	this.saveChanges;
	this.addKonf;
	
}]);






